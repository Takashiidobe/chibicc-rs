diff --git a/parse.c b/parse.c
index 24cfd1a..7d00e3c 100644
--- a/parse.c
+++ b/parse.c
@@ -1706,6 +1706,12 @@ static void struct_members(Token **rest, Token *tok, Type *ty) {
     }
   }
 
+  // If the last element is an array of incomplete type, it's
+  // called a "flexible array member". It should behave as if
+  // if were a zero-sized array.
+  if (cur != &head && cur->ty->kind == TY_ARRAY && cur->ty->array_len < 0)
+    cur->ty = array_of(cur->ty->base, 0);
+
   *rest = tok->next;
   ty->members = head.next;
 }
diff --git a/test/sizeof.c b/test/sizeof.c
index 1d9f3e4..554b3b9 100644
--- a/test/sizeof.c
+++ b/test/sizeof.c
@@ -34,6 +34,8 @@ int main() {
   ASSERT(8, sizeof(int(*)[10]));
   ASSERT(8, sizeof(int(*)[][10]));
 
+  ASSERT(4, sizeof(struct { int x, y[]; }));
+
   printf("OK\n");
   return 0;
 }
