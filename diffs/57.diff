diff --git a/parse.c b/parse.c
index 73b105f..4696d86 100644
--- a/parse.c
+++ b/parse.c
@@ -267,11 +267,20 @@ static Type *type_suffix(Token **rest, Token *tok, Type *ty) {
   return ty;
 }
 
-// declarator = "*"* ident type-suffix
+// declarator = "*"* ("(" ident ")" | "(" declarator ")" | ident) type-suffix
 static Type *declarator(Token **rest, Token *tok, Type *ty) {
   while (consume(&tok, tok, "*"))
     ty = pointer_to(ty);
 
+  if (equal(tok, "(")) {
+    Token *start = tok;
+    Type dummy = {};
+    declarator(&tok, start->next, &dummy);
+    tok = skip(tok, ")");
+    ty = type_suffix(rest, tok, ty);
+    return declarator(&tok, start->next, ty);
+  }
+
   if (tok->kind != TK_IDENT)
     error_tok(tok, "expected a variable name");
   ty = type_suffix(rest, tok->next, ty);
diff --git a/test/variable.c b/test/variable.c
index 98ef696..7c88442 100644
--- a/test/variable.c
+++ b/test/variable.c
@@ -53,6 +53,15 @@ int main() {
   ASSERT(8, ({ long x; sizeof(x); }));
   ASSERT(2, ({ short x; sizeof(x); }));
 
+  ASSERT(24, ({ char *x[3]; sizeof(x); }));
+  ASSERT(8, ({ char (*x)[3]; sizeof(x); }));
+  ASSERT(1, ({ char (x); sizeof(x); }));
+  ASSERT(3, ({ char (x)[3]; sizeof(x); }));
+  ASSERT(12, ({ char (x[3])[4]; sizeof(x); }));
+  ASSERT(4, ({ char (x[3])[4]; sizeof(x[0]); }));
+  ASSERT(3, ({ char *x[3]; char y; x[0]=&y; y=3; x[0][0]; }));
+  ASSERT(4, ({ char x[3]; char (*y)[3]=x; y[0][0]=4; y[0][0]; }));
+
   printf("OK\n");
   return 0;
 }
