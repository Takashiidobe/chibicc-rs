diff --git a/parse.c b/parse.c
index 9dd3f8d..0660c72 100644
--- a/parse.c
+++ b/parse.c
@@ -786,6 +786,14 @@ static void initializer2(Token **rest, Token *tok, Initializer *init) {
     return;
   }
 
+  if (equal(tok, "{")) {
+    // An initializer for a scalar variable can be surrounded by
+    // braces. E.g. `int x = {3};`. Handle that case.
+    initializer2(&tok, tok->next, init);
+    *rest = skip(tok, "}");
+    return;
+  }
+
   init->expr = assign(rest, tok);
 }
 
diff --git a/test/initializer.c b/test/initializer.c
index afa9ed9..e089f7d 100644
--- a/test/initializer.c
+++ b/test/initializer.c
@@ -26,6 +26,7 @@ int *g31=g30.a.a;
 struct {int a[2];} g40[2] = {{1, 2}, 3, 4};
 struct {int a[2];} g41[2] = {1, 2, 3, 4};
 char g43[][4] = {'f', 'o', 'o', 0, 'b', 'a', 'r', 0};
+char *g44 = {"foo"};
 
 int main() {
   ASSERT(1, ({ int x[3]={1,2,3}; x[0]; }));
@@ -157,6 +158,7 @@ int main() {
 
   ASSERT(0, strcmp(g43[0], "foo"));
   ASSERT(0, strcmp(g43[1], "bar"));
+  ASSERT(0, strcmp(g44, "foo"));
 
   printf("OK\n");
   return 0;
